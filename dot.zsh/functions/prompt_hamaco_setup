autoload -Uz colors; colors
autoload -Uz vcs_info
autoload -Uz is-at-least

zstyle ':vcs_info:*' formats '(%s)-[%b]'
zstyle ':vcs_info:*' actionformats '(%s)-[%b|%a]'
zstyle ':vcs_info:svn:*' branchformat '%b:r%r'

local PROMPT_YUNO="/ _ / X"
local PROMPT_NONOWA="(のワの) <"
local PROMPT_YAYOI="ζ*'ヮ')ζ <"
local PROMPT_YAYOI2="ζ*#ﾟДﾟ)ζ<"
local PROMPT_YUKIHO="lw 'ヮ'ﾉv <"
local PROMPT_KONATA="＼(＝ω＝．)／ <"
local PROMPT_NAGATO="YUKI.N>"
local PROMPT_UUPAA="(ε・△・)з"
local PROMPT_UUPAA2="(ε・﹏・)з"
local PROMPT_QB="／人◕‿‿◕人＼"

function vcs_status () {
	LANG=en_US.UTF-8 vcs_info
	[[ -n "$vcs_info_msg_0_" ]] && echo -n " on %{$fg[yellow]%}$vcs_info_msg_0_%{$reset_color%}"
}

function pwd_status () {
	local color

	case ${PWD} in
		/mnt/*|/Volumes/*) color=$fg[red]  ;;
		/web/*)     color=$fg[yellow] ;;
		*)          color=$fg[cyan] ;;
	esac

	echo -n "[%{$color%}%~%{$reset_color%}]"
}

case "${HOST}" in
hamacbook*)
	PROMPT="%{$fg[green]%}%n@%m%{$reset_color%} "
	;;
*)
	PROMPT="%{$fg[red]%}%n@%m%{$reset_color%} "
	;;
esac
PROMPT+="\$(pwd_status)"
is-at-least 4.3.7 && PROMPT+="\$(vcs_status)"
PROMPT+="
${PROMPT_NAGATO} "
#%{$fg[cyan]%}${PROMPT_NAGATO}%{$reset_color%} "
#%(?.$fg[blue].$fg[red])${PROMPT_NAGATO}%{$reset_color%} "


RPROMPT="%*"
case "${OSTYPE}" in
darwin*)
	RPROMPT+=" (\$(sysctl -n vm.loadavg | sed 's/{ \(....\) .*/\1/'))"
	;;
esac


PROMPT2="%_%% "


SPROMPT="correct: %{$fg[red]%}%R%{$reset_color%} -> %{$fg[yellow]%}%r%{$reset_color%} ? [y,n,a,e]: "
SPROMPT="もしかして %{$fg[yellow]%}%r%{$reset_color%}? べ、別にあんたのために修正したんじゃないんだからね! [n,y,a,e]:"


# vim:set ft=zsh:
