source_files $(dirname $0)/sources/*.zsh

if exists peco; then

  # git-resent-breanches
  # bindkey '^x^b' peco-git-recent-branches
  # bindkey '^xb'  peco-git-recent-all-branches
  # bindkey '^x^b' anyframe-widget-checkout-git-branch

  # snippets
  bindkey '^x^x' peco-snippets

  # alias
  p() { peco | while read LINE; do $@ $LINE; done  }
  alias o="git ls-files | p open"
  alias cd-temp="ls -d ~/tmp/*(/) | p cd"

  function peco-git-add() {
    git add  $(git status --porcelain | peco --query "$LBUFFER" | awk -F ' ' '{print $NF}')
  }

  function peco-ssh() {
    BUFFER="ssh $(grep '^Host' $HOME/.ssh/config | grep -v '*' | cut -d' ' -f2 | peco)"
    zle accept-line
  }
  zle -N peco-ssh
  bindkey '^x^s' peco-ssh
  alias pssh=peco-ssh

  alias -g B='$(git for-each-ref --format="%(refname)" refs/heads refs/remotes | peco --prompt "GIT BRANCH>" | perl -pne "s{^refs/(heads|remotes)/}{}")'
  alias -g H='$(curl -sL https://api.github.com/users/hamaco/repos | jq -r ".[].full_name" | peco --prompt "GITHUB REPO>" | head -n 1)'
  alias -g LR='$(git branch -a | peco --query "remotes/ " --prompt "GIT REMOTE BRANCH>" | head -n 1 | sed "s/^\*\s*//" | sed "s/remotes\/[^\/]*\/\(\S*\)/\1/")'
fi


if exists fzf; then
  export FZF_COMPLETION_TRIGGER=','
  export FZF_DEFAULT_COMMAND='rg --files --hidden --follow --glob "!.git/*"'
  export FZF_DEFAULT_OPTS="--no-sort --exact --cycle --multi --ansi --reverse --border --sync --height 60% --bind=ctrl-k:kill-line --bind=?:toggle-preview --bind=down:preview-down --bind=up:preview-up"
  export FZF_TMUX=1

  zstyle ":anyframe:selector:" use fzf
  zstyle ":anyframe:selector:fzf:" command 'fzf-tmux -p80%'

  # git-resent-breanches
  bindkey '^x^b' fzf-git-recent-branches
  bindkey '^xb'  fzf-git-recent-all-branches

  function fzf-ssh() {
    ssh `grep '^Host' $HOME/.ssh/config | grep -v '*' | cut -d' ' -f2 | fzf-tmux -p80%`
  }
  alias sshf=fzf-ssh

  alias cd-temp='cd $(ls -d ~/tmp/*(/) | fzf-tmux -p80% --select-1)'

  # source_if ~/.fzf.zsh
fi

# anyframe
bindkey '^r'  anyframe-widget-put-history
bindkey '^s'  anyframe-widget-cd-ghq-repository
bindkey '^x;' anyframe-widget-cdr
bindkey '^xk' anyframe-widget-kill
