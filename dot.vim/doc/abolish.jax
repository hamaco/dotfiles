*abolish.txt*  言語に優しい検索、置換、短縮入力

作者:       Tim Pope <vimNOSPAM@tpope.info>        *abolish-author*
ライセンス: Same terms as Vim itself (see |license|)

日本語訳      : Takeshi NISHIDA <ns9tks@DELETE-ME.gmail.com>
対象バージョン: 1.0

このプラグインは 'compatible' がオフの場合にのみ利用できます。

はじめに                                        *abolish* *:Abolish* *:Subvert*

Abolish は単語の様々なバリエーションに対する検索、置換、短縮入力を素早く一挙に
実行することができます。デフォルトでは大文字/小文字が異なる3つ(foo, Foo, FOO)
が各コマンドで処理されます。

2つのコマンドが提供されます。:Abolish は最も一般的なインターフェースです。
:Subvert は検索と置換をもっと簡潔な文法で行うための代替インターフェースを提供
します。
>
	:Abolish [options] {abbreviation} {replacement}
	:Abolish -delete [options] {abbreviation}

	:Abolish -search [options] {pattern}
	:Subvert/{pattern}[/flags]
	:Abolish!-search [options] {pattern}
	:Subvert?{pattern}[?flags]

	:Abolish -search [options] {pattern} {grep-arguments}
	:Subvert /{pattern}/[flags] {grep-options}
	:Abolish!-search [options] {pattern} {grep-arguments}
	:Subvert!/{pattern}/[flags] {grep-options}

	:[range]Abolish -substitute [options] {pattern} {replacement}
	:[range]Subvert/{pattern}/{replacement}[/flags]
<
						*:S*
:Subvert コマンドはさらに、同義コマンド :S をそれが定義されてなければ提供し
ます。これは後述の例で使用されます。

パターン					*abolish-patterns*

パターンはコンマで区切られた選択項目を括った中括弧を含むことができます。

  box{,es} => box, boxes, Box, Boxes, BOX, BOXES

置換を行うコマンドでは、検索パターンと置換文字列の両方で中括弧を対応させて使用
します。置換文字列を検索パターンと同じにしたいなら空の中括弧を使います。置換文
字列で与えられた選択項目が検索パターンの選択項目より少ない場合、選択項目をルー
プさせます。つまり、置換文字列での {a,b} は 無限に繰り返される
{a,b,a,b,a,b,...} のようになります。

これは  "necessary" の数種類のミススペリングを置換します:
>
	:%S/{,un}nec{ce,ces,e}sar{y,ily}/{}nec{es}sar{}/g
<
短縮入力					*abolish-abbrev*

デフォルトでは :Abolish は 入力した単語を自動的に置換する短縮入力を作成します。
頻繁にミススペルする単語に対してや、長い単語のショートカットとして有用です。
普通の Vim の短縮入力だと、同一の単語全体にしかマッチしません。
>
	:Abolish anomol{y,ies} anomal{}
	:Abolish {,in}consistant{,ly} {}consistent{}
	:Abolish Tqbf The quick, brown fox jumps over the lazy dog
<
次のオプションが利用できます:

 -buffer: バッファローカル
 -cmdline: インサートモードに加えてコマンドモードでも動作させる

短縮入力を定義する場所は Windows だと ~\vimfiles 下の、それ以外では ~/.vim 
下の "after/plugin/abolish.vim" が良いでしょう。


bang 付き (:Abolish!) では短縮入力は g:abolish_save_file のファイルにも追加されます。
デフォルトでは インストールディレクトリ下の "after/plugin/abolish.vim" です。

:Abolish -delete で短縮入力の削除ができます:
>
	Abolish -delete -buffer -cmdline anomol{y,ies}
<
検索						*abolish-search*

-search コマンドは / キーのような方法で検索します。検索後は、従来の検索と同様
に|n|と|N|を利用することができます。

これは box, Box, BOX を検索します:
>
	:Abolish -search box
<
一つの単語を与えた場合、:Subvert は
When given a single word to operate on, :Subvert defaults to doing a
search as well:
>
	:S/box/
<
これは box, boxes, boxed, boxing, Box, Boxes, Boxed, Boxing, BOX, BOXES,
BOXED, BOXING を検索します:
>
	:S/box{,es,ed,ing}/
<
この文法では逆方向に検索します:
>
	:Abolish! -search box
	:S?box?
<

:Abolish の -flags= オプションで、または :Subvert のセパレータの後でフラグを指
定することができます。フラグは次のように作用します:

 I: 大文字/小文字のバリエーションを無効化 (box, Box, BOX)
 v: 変数名内の単語にマッチ (my_box, myBox にマッチし, mybox にマッチしない)
 w: 単語全体としてマッチ (\< と \> で囲んだ場合のように)

|search-offset|をフラグに続けて指定することができます。
>
	:Abolish -search -flags=avs+1 box
	:S?box{,es,ed,ing}?we
<
GREPPING					*abolish-grep*

Grepping は 検索と同じようになっていて、追加のオプションが与えられたときに作用
します。そのオプションは :grep コマンドに直接渡されます。
>
	:Abolish -search box{,es}
	:S /box{,es}/ *
	:S /box/aw *.txt *.html
<
:Subvert で使用するときはスラッシュの区切りは必ず2つとも入力します。

The slash delimiters must both be present if used with :Subvert.  They may
both be omitted if no flags are used.

外部 grep と (grepprg=internal での) vimgrep のどちらもサポートされています。
外部 grep では、grep の正規表現が先読みと後読みをサポートしていないため "v" フ
ラグはあまりうまく作用しません。

置換						*abolish-substitute*

範囲を指定することで :Subvert は置換モードになります。このコマンドはドキュメン
ト全体に渡って box -> bag, boxes -> bags, Box -> Bag, Boxes -> Bags, BOX ->
BAG, BOXES -> BAGS という変更を行います。
>
	:%Abolish -substitute -flags=g box{,es} bag{,s}
	:%S/box{,es}/bag{,s}/g
<
substitute コマンドの "c", "e", "g", "n" フラグ|:s_flags|が検索の
"a", "I", "v", "w" フラグと共に利用可能です。

COERCION					*abolish-coercion* *cr*

Abolish の大文字/小文字を変化させるアルゴリズムを、カーソル下の単語に適用させ
るには、次の文字のいずれかが続く cr マッピング(覚え方: CoeRce)を使用します:

  c: camelCase
  m: MixedCase
  _: snake_case
  s: snake_case
  u: SNAKE_UPPERCASE
  -: dash-case (逆変換不可)

例えば小文字の単語の上で cru と入力するのは、同義の gUiw よりもいくらか楽です。

 vim:tw=78:ts=8:ft=help:norl:
